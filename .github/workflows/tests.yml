name: tests

on:
  push:
    branches:
      - develop

jobs:
  Tests:
    name: Tests
    runs-on: macOS-12
    env:
      DEVELOPER_DIR: /Applications/Xcode_13.4.1.app/Contents/Developer
      PROJECT: VirgilE3Kit.xcodeproj
    strategy:
      matrix:
        include:
          - destination: "OS=15.5,name=iPhone 13 Pro"
            prefix: "iOS"
            test: "1"
          - destination: "arch=x86_64"
            prefix: "macOS"
            test: "1"
          - destination: "OS=15.4,name=Apple TV"
            prefix: "tvOS"
            test: "1"
          - destination: "OS=8.5,name=Apple Watch Series 7 - 45mm"
            prefix: "watchOS"
            test: "0"
    steps:
      - uses: actions/checkout@v2
      - name: Decrypt tests config
        run: ./CI/decrypt-config.sh
        env:
            ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
            ENCRYPTION_IV: ${{ secrets.ENCRYPTION_IV }}
      - name: Prepare Dependencies
        env:
            GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            carthage version
            carthage bootstrap --use-xcframeworks --platform ${{ matrix.prefix }}
      - name: Run ${{ matrix.prefix }} Tests
        run: |
            SCHEME="VirgilE3Kit ${{ matrix.prefix }}"

            if [ "${{ matrix.test }}" == "1" ]; then
                # Build Framework
                xcodebuild -verbose -project "$PROJECT" -scheme "$SCHEME" -destination "${{ matrix.destination }}" -configuration Debug clean build-for-testing | xcpretty;
                # Run Tests
                xcodebuild -verbose -project "$PROJECT" -scheme "$SCHEME" -destination "${{ matrix.destination }}" -configuration Debug test-without-building | xcpretty;
            else
                xcodebuild -verbose -project "$PROJECT" -scheme "$SCHEME" -destination "${{ matrix.destination }}" -configuration Release clean build | xcpretty;
            fi
  SPM:
    runs-on: macOS-12
    steps:
      - uses: actions/checkout@v2
      - name: Decrypt tests config
        run: ./CI/decrypt-config.sh
        env:
            ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
            ENCRYPTION_IV: ${{ secrets.ENCRYPTION_IV }}
      - name: SPM test
        run: |
            brew install coreutils # install 'timeout' utility
            swift --version
            # fix for Swift Package Manager when it fails to download binary targets
            timeout 5m bash -c 'until swift build; do rm -fr .build && sleep 10; done'
            swift test

  Swiftlint:
    runs-on: macOS-12
    steps:
      - uses: actions/checkout@v2
      - name: Swiftlint
        run: |
            brew outdated swiftlint || brew upgrade swiftlint
            swiftlint
